name: LumenTV Compose Build Pre Release
on:
  push:
    branches: [ pre-release ]
jobs:
  set-tag:
    uses: ./.github/workflows/set-tag-workflow.yml

  build-win:
    runs-on: windows-latest
    needs: set-tag
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'gradle'
      - run: ls
      - run: ./gradlew createReleaseDistributable
      - run: ls && tree ./desktopApp /f
      - name: compress
        shell: pwsh
        run: Compress-Archive -Path "/composeApp/build/compose/binaries/main-release/app/LumenTV" -DestinationPath ./LumenTV-win-${{ needs.set-tag.outputs.tag }}.zip
      - run: ls
      - uses: actions/upload-artifact@v4
        with:
          name: win-file
          path: |
            *.msi
            *.zip
  build-linux:
    runs-on: ubuntu-latest
    needs:
      - set-tag
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'gradle'
      - run: ls
      - run: chmod +x ./gradlew && ./gradlew createReleaseDistributable
      - run: ./gradlew packageReleaseDistributionForCurrentOS
      - run: ls && tree
      - name: compress
        run: cd ./composeApp/build/compose/binaries/main-release/app && zip -q -r ./LumenTV-linux-${{ needs.set-tag.outputs.tag }}.zip ./LumenTV
      - name: move file
        run: mv ./composeApp/build/compose/binaries/main-release/deb/*.deb ./LumenTV-linux-${{ needs.set-tag.outputs.tag }}.deb && mv ./composeApp/build/compose/binaries/main-release/app/*.zip ./
      - run: ls
      - uses: actions/upload-artifact@v4
        with:
          name: linux-file
          path: |
            *.deb
            *.zip

  build-mac:
    runs-on: macos-13
    needs: set-tag
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'gradle'
      - run: ls
      - run: chmod +x ./gradlew && ./gradlew createReleaseDistributable
      - run: ls
      - name: compress
        run: zip -q -r ./LumenTV-mac-${{ needs.set-tag.outputs.tag }}.zip ./composeApp/build/compose/binaries/main-release/app
      - run: ls
      - uses: actions/upload-artifact@v4
        with:
          name: mac-file
          path: |
            *.dmg
            *.zip
  release:
    runs-on: ubuntu-latest
    needs: [ build-win, build-linux, build-mac, set-tag ]
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
      - run: ls && tree
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            **/*.zip
            **/*.deb
            **/*.pkg
            **/*.dmg
            **/*.msi
          tag_name: ${{ needs.set-tag.outputs.tag }}
          prerelease: true
    permissions:
      contents: write