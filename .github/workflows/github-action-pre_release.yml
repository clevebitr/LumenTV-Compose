name: LumenTV Compose Build Pre Release
on:
  push:
    branches: [ pre-release ]

jobs:
  set-tag:
    uses: ./.github/workflows/set-tag-workflow.yml

  build-win:
    runs-on: windows-latest
    needs: set-tag
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'gradle'

      - run: ./gradlew createReleaseDistributable

      - name: compress
        shell: pwsh
        run: |
          Compress-Archive -Path "./composeApp/build/compose/binaries/main-release/app/TV" `
            -DestinationPath "./TV-win-${{ needs.set-tag.outputs.tag }}.zip"

      - uses: actions/upload-artifact@v4
        with:
          name: win-file
          path: |
            *.msi
            *.zip

  build-linux:
    runs-on: ubuntu-latest
    needs: set-tag
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'gradle'

      - run: chmod +x ./gradlew && ./gradlew createReleaseDistributable

      - name: package
        run: |
          cd ./composeApp/build/compose/binaries/main-release/app
          zip -q -r "../../../../../../TV-linux-${{ needs.set-tag.outputs.tag }}.zip" ./TV
          mv ../../deb/*.deb "../../../../../../TV-linux-${{ needs.set-tag.outputs.tag }}.deb"

      - uses: actions/upload-artifact@v4
        with:
          name: linux-file
          path: |
            *.deb
            *.zip

  build-mac:
    runs-on: macos-13
    needs: set-tag
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'gradle'

      - run: chmod +x ./gradlew && ./gradlew createReleaseDistributable

      - name: package
        run: |
          zip -q -r "./TV-mac-${{ needs.set-tag.outputs.tag }}.zip" \
            ./composeApp/build/compose/binaries/main-release/app

      - uses: actions/upload-artifact@v4
        with:
          name: mac-file
          path: |
            *.dmg
            *.zip

  release:
    runs-on: ubuntu-latest
    needs: [build-win, build-linux, build-mac, set-tag]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            **/*.zip
            **/*.deb
            **/*.dmg
            **/*.msi
          tag_name: ${{ needs.set-tag.outputs.tag }}
          prerelease: true
          body: |
            Pre-release version: ${{ needs.set-tag.outputs.tag }}
            Changelog: https://github.com/${{ github.repository }}/compare/${{ needs.set-tag.outputs.lastTag }}...${{ needs.set-tag.outputs.tag }}
    permissions:
      contents: write